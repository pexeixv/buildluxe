---
import MenuItem, { IMenuItem } from "@components/MenuItem.astro";
import MenuItemGroup, { IMenuItemGroup } from "@components/MenuItemGroup.astro";
import Button from "./Button.astro";
import { Icon } from "astro-icon";
import InlineSVG from "./InlineSVG.astro";
export interface IMenuItems extends Array<IMenuItem | IMenuItemGroup> {}

const { darkHeader = false } = Astro.props;

const menuItems: IMenuItems = [
  { label: "Home", link: "/" },
  { label: "About", link: "/about" },
  {
    label: "Services",
    link: "/services",
    list: [
      { label: "Construction Service", link: "/services/construction" },
      { label: "Architectural Design", link: "/services/architecture" },
      { label: "Land Service", link: "/services/land" },
      { label: "Property Management", link: "/services/property" },
      { label: "Legalities", link: "/services/legal" },
    ],
  },
];
---

<header
  id="header"
  class:list={[
    "text-white fixed font-bold tracking-wider top-0 left-0 w-full z-50 group/header transition-colors duration-1000 delay-100",
    { "bg-black": darkHeader },
  ]}
  transition:persist
>
  <div
    id="azulejos"
    class="w-full h-full bg-repeat bg-center group-[.bg-black]/header:bg-azulejos transition-all duration-1000 delay-100"
  >
    <div
      class="container mx-auto px-5 py-4 flex flex-col lg:flex-row items-center justify-between"
    >
      <div class="flex items-center justify-between w-full">
        <a href="/" class="text-white text-xl items-center hidden not-flex">
          <span class="font-thin">Build</span>
          <span class="font-black">luxe</span>
        </a>
        <a href="/">
          <InlineSVG
            path="logo"
            class="h-16 text-white grid place-items-center"
          />
        </a>
        <button class="lg:hidden w-8 h-8" id="menu-button">
          <Icon name="mdi:hamburger-menu" id="open-menu" />
          <Icon name="mdi:close" id="close-menu" class="hidden" />
        </button>
      </div>

      <nav
        id="menu"
        class="uppercase hidden lg:flex gap-8 py-4 lg:py-0 max-lg:bg-black group-[.bg-black]/header:max-lg:bg-transparent max-lg:w-full max-lg:relative max-lg:top-4 items-center"
      >
        <ul class="flex flex-col lg:flex-row items-center gap-8 w-full">
          {
            menuItems.map((item: IMenuItem | IMenuItemGroup) => {
              if ("list" in item) return <MenuItemGroup {item} />;
              return <MenuItem {item} />;
            })
          }
          <Button
            variant="secondary"
            link="/contact"
            classes="lg:hidden block font-catchye capitalize text-xl"
          >
            Contact
          </Button>
        </ul>
        <Button
          variant="secondary"
          link="/contact"
          classes="lg:block hidden font-catchye capitalize text-xl"
        >
          Contact
        </Button>
      </nav>
    </div>
  </div>
</header>

<script>
  const openMenu = document.querySelector("#open-menu");
  const closeMenu = document.querySelector("#close-menu");
  const menu = document.querySelector("#menu");
  const menuItems = document.querySelectorAll("#menu a");

  menuItems.forEach((item) => {
    item.addEventListener("click", () => toggleMenu());
  });

  const header = document.querySelector("#header");
  const menuButton = document.querySelector("#menu-button");
  window.addEventListener("scroll", () => {
    if (window.scrollY > 150) header.classList.add("bg-black");
    else header.classList.remove("bg-black");
  });

  const toggleMenu = () => {
    openMenu.classList.toggle("hidden");
    closeMenu.classList.toggle("hidden");
    menu.classList.toggle("hidden");
    menu.classList.toggle("flex");
  };

  menuButton.addEventListener("click", toggleMenu);
</script>
